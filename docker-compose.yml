
# services:
#   microservice-1:
#     build:
#       context: ./microservice-1
#     container_name: microservice-1
#     ports:
#       - "5000:5000"

#   microservice-2:
#     build:
#       context: ./microservice-2
#     container_name: microservice-2
#     ports:
#       - "8080:8080"
#     depends_on:
#       - microservice-1


services:
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 5s
      timeout: 5s
      retries: 5
 
  temperature-service:
    build:
      context: ./temperature-service
    container_name: temperature-service
    ports:
      - "5050:5050"
    depends_on:
      rabbitmq:
        condition: service_healthy
      mysql:
        condition: service_healthy
 
  assistant-service:
    build:
      context: ./assistant-service
    container_name: assistant-service
    ports:
      - "8080:8080"
    depends_on:
      rabbitmq:
        condition: service_healthy
      mysql:
        condition: service_healthy
 
  light-service:
    build:
      context: ./light-service
    container_name: light-service
    ports:
      - "3000:3000"
    depends_on:
      rabbitmq:
        condition: service_healthy
      mysql:
        condition: service_healthy
 
  mysql:
    image: mysql:8.0
    container_name: mysql-db
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: temp_db, security_db, light_db
    ports:
      - "3306:3306"
    volumes:
      - mysql-data:/var/lib/mysql
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      retries: 5
 
 
volumes:
  mysql-data: